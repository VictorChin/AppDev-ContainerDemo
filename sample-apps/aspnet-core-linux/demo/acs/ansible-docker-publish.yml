---
# This playbook builds the .NET Website & creates a container --> pushes to the private repo and then pulls it via K8S
- hosts: buildbox
  remote_user: VALUEOF-DEMO-ADMIN-USER-NAME

  tasks: 
  - name: Restore the requirements
    command: dotnet restore
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src
  
  - name: .NET BUILD
    command: dotnet build
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src
  
  - name: Publish the site
    command: dotnet publish
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src

  - name: Build the DOCKER image
    command: docker build -t ossdemo/aspnet-core-linux .
    become: true
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src

  - name: Tag the DOCKER image
    command: docker tag ossdemo/aspnet-core-linux VALUEOF-REGISTRY-SERVER-NAME/ossdemo/aspnet-core-linux
    become: true

  - name: Log into private registry and force re-authorization
    command: docker login VALUEOF-REGISTRY-SERVER-NAME -u VALUEOF-REGISTRY-USER-NAME -p VALUEOF-REGISTRY-PASSWORD
    become: true

  - name: Push to the Azure Private Registry
    command: docker push VALUEOF-REGISTRY-SERVER-NAME/ossdemo/aspnet-core-linux
    become: true
    
  - name: Redeploy the new image in K8S
    command: kubectl set image deployment/aspnet-core-linux-deployment aspnet-core-linux=VALUEOF-REGISTRY-SERVER-NAME/gbbossdemo/aspnet-core-linux:latest
    