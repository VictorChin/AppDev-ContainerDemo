---
# This playbook builds the .NET Website & creates a container --> pushes to the private repo and then pulls it down
- hosts: buildbox
  remote_user: VALUEOF-DEMO-ADMIN-USER-NAME

  tasks: 
  - name: Restore the requirements
    command: dotnet restore
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src
  
  - name: .NET BUILD
    command: dotnet build
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src
  
  - name: Publish the site
    command: dotnet publish
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src

  - name: Build the DOCKER image
    command: docker build -t ossdemo/aspnet-core-linux .
    become: true
    args:
      chdir: /source/AppDev-ContainerDemo/sample-apps/aspnet-core-linux/src

  - name: Tag the DOCKER image
    command: docker tag ossdemo/aspnet-core-linux VALUEOF-REGISTRY-SERVER-NAME/ossdemo/aspnet-core-linux
    become: true

  - name: Log into private registry and force re-authorization
    docker_login:
      registry: VALUEOF-REGISTRY-SERVER-NAME
      username: VALUEOF-REGISTRY-USER-NAME
      password: VALUEOF-REGISTRY-PASSWORD
      reauthorize: yes
  
  # - name: Log into private registry and force re-authorization
  #   command: docker login VALUEOF-REGISTRY-SERVER-NAME -u VALUEOF-REGISTRY-USER-NAME -p VALUEOF-REGISTRY-PASSWORD
  #   become: true

  - name: Push to the Azure Private Registry
    command: docker push VALUEOF-REGISTRY-SERVER-NAME/ossdemo/aspnet-core-linux
    become: true

#Now deploy the containers on the worker nodes

- hosts: dockerhosts
  remote_user: VALUEOF-DEMO-ADMIN-USER-NAME
  sudo : true 

  tasks: 
    # Ensure that a our container  is running. This will:
# - pull the latest version of the application image.
# - ensure that a container is running with the specified name and exact image.
#   If any configuration options have changed, the existing container will be
#   stopped and removed, and a new one will be launched in its place.

  - name: Log into private registry and force re-authorization
    docker_login:
      registry: VALUEOF-REGISTRY-SERVER-NAME
      username: VALUEOF-REGISTRY-USER-NAME
      password: VALUEOF-REGISTRY-PASSWORD
      reauthorize: yes

  - name: Pull the newest image if avialable and run
    docker:
      name: aspnet-core-linux
      image: VALUEOF-REGISTRY-SERVER-NAME/ossdemo/aspnet-core-linux
      state: reloaded
      pull: always
      ports:
        - "80:80"
