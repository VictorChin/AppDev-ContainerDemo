version: '3'

services:
  basketapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Basket/Basket.API
      dockerfile: Dockerfile
    image: eshop/basket.api
    depends_on:
      - basketdata
      - identityapi
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  catalogapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Catalog/Catalog.API
      dockerfile: Dockerfile
    image: eshop/catalog.api
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  identityapi:
    build:
        context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Identity/Identity.API
        dockerfile: Dockerfile
    image: eshop/identity.api
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  orderingapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Ordering/Ordering.API
      dockerfile: Dockerfile
    image: eshop/ordering.api
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  webmvc:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Web/WebMVC
      dockerfile: Dockerfile
    image: eshop/webmvc
    depends_on:
      - catalogapi
      - orderingapi
      - identityapi
      - basketapi
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  sqldata:
    image: microsoft/mssql-server-linux
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  basketdata:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8081:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]