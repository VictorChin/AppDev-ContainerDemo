version: '3'

services:
  basket.api:
    image: eshop/basket.api
    build:
      context: ./src/Services/Basket/Basket.API
      dockerfile: Dockerfile
    depends_on:
      - basket.data
      - identity.api
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  catalog.api:
    image: eshop/catalog.api
    build:
      context: ./src/Services/Catalog/Catalog.API
      dockerfile: Dockerfile
    depends_on:
      - sql.data
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  identity.api:
    image: eshop/identity.api
    build:
      context: ./src/Services/Identity/Identity.API
      dockerfile: Dockerfile
    depends_on:
      - sql.data
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  ordering.api:
    image: eshop/ordering.api
    build:
      context: ./src/Services/Ordering/Ordering.API
      dockerfile: Dockerfile
    depends_on:
      - sql.data
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  webmvc:
    image: eshop/webmvc
    build:
      context: ./src/Web/WebMVC
      dockerfile: Dockerfile
    depends_on:
      - catalog.api
      - ordering.api
      - identity.api
      - basket.api
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  sql.data:
    image: microsoft/mssql-server-linux
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  basket.data:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
