version: '3'

services:
  basketapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Basket/Basket.API
      dockerfile: Dockerfile
    image: VALUEOF-REGISTRY-SERVER-NAME/eshop/basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5103
      - ConnectionString=basketdata
      - identityUrl=http://identityapi:5105              #Local: You need to open your host's firewall at range 5100-5105.  at range 5100-5105. 
    ports:
      - "5103:5103"
    depends_on:
      - basketdata
      - identityapi
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  catalogapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Catalog/Catalog.API
      dockerfile: Dockerfile
    image: VALUEOF-REGISTRY-SERVER-NAME/eshop/catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5101
      - ConnectionString=Server=REPLACESQLSERVER;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User Id=REPLACESQLADMIN;Password=REPLACESQLPASSWORD
      - ExternalCatalogBaseUrl=http://VALUEOF-UNIQUE-SERVER-PREFIX-iaas-demo.eastus.cloudapp.azure.com:5101    #Local: You need to open your host's firewall at range 5100-5105.  at range 5100-5105.
    ports:
      - "5101:5101"
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  identityapi:
    build:
        context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Identity/Identity.API
        dockerfile: Dockerfile
    image: VALUEOF-REGISTRY-SERVER-NAME/eshop/identityapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5105
      - SpaClient=http://VALUEOF-UNIQUE-SERVER-PREFIX-iaas-demo.eastus.cloudapp.azure.com:5104
      - ConnectionStrings__DefaultConnection=Server=REPLACESQLSERVER;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User Id=REPLACESQLADMIN;Password=REPLACESQLPASSWORD
      - MvcClient=http://VALUEOF-UNIQUE-SERVER-PREFIX-iaas-demo.eastus.cloudapp.azure.com:5100              #Local: You need to open your host's firewall at range 5100-5105.  
    ports:
      - "5105:5105"
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  orderingapi:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Services/Ordering/Ordering.API
      dockerfile: Dockerfile
    image: VALUEOF-REGISTRY-SERVER-NAME/eshop/orderingapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5102
      - ConnectionString=Server=REPLACESQLSERVER;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=REPLACESQLADMIN;Password=REPLACESQLPASSWORD
      - identityUrl=http://identityapi:5105              #Local: You need to open your host's firewall at range 5100-5105.  at range 5100-5105. 
    ports:
      - "5102:5102"
    depends_on:
      - sqldata
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  webmvc:
    build:
      context: /source/AppDev-ContainerDemo/sample-apps/eShopOnContainers/src/Web/WebMVC
      dockerfile: Dockerfile
    image: VALUEOF-REGISTRY-SERVER-NAME/eshop/webmvc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5100
      - CatalogUrl=http://catalogapi:5101
      - OrderingUrl=http://orderingapi:5102
      - IdentityUrl=http://VALUEOF-UNIQUE-SERVER-PREFIX-iaas-demo.eastus.cloudapp.azure.com:5105     #Local: Use VALUEOF-UNIQUE-SERVER-PREFIX-iaas-demo.eastus.cloudapp.azure.com, if using external IP or DNS name from browser.          
      - BasketUrl=http://basketapi:5103
    ports:
      - "5100:5100"
    depends_on:
      - catalogapi
      - orderingapi
      - identityapi
      - basketapi
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == worker]

  basketdata:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8081:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]